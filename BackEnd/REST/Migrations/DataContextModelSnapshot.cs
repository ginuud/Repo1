// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using REST.Data;

#nullable disable

namespace REST.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("REST.Models.Classes.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));
                    NpgsqlPropertyBuilderExtensions.HasIdentityOptions(b.Property<int>("Id"), 4L, null, null, null, null, null);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Points")
                        .HasColumnType("integer");

                    b.Property<int>("Rank")
                        .HasColumnType("integer");

                    b.Property<int>("TeamId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Michael Jordan",
                            Points = 32292,
                            Rank = 1,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "LeBron James",
                            Points = 35367,
                            Rank = 2,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kobe Bryant",
                            Points = 33643,
                            Rank = 3,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Magic Johnson",
                            Points = 17707,
                            Rank = 4,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = "Larry Bird",
                            Points = 21791,
                            Rank = 53,
                            TeamId = 3
                        });
                });

            modelBuilder.Entity("REST.Models.Classes.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));
                    NpgsqlPropertyBuilderExtensions.HasIdentityOptions(b.Property<int>("Id"), 4L, null, null, null, null, null);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bulls"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Lakers"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Celtics"
                        });
                });

            modelBuilder.Entity("REST.Models.Classes.Player", b =>
                {
                    b.HasOne("REST.Models.Classes.Team", "Team")
                        .WithMany("Members")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("REST.Models.Classes.Team", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
